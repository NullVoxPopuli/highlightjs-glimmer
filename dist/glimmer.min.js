(()=>{function _(t){function c(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:a,disableAutodetect:!0,contains:[t.COMMENT(/\{\{!--/,/--\}\}/),t.COMMENT(/\{\{!/,/\}\}/),t.COMMENT(/<!--/,/-->/),r,...N,o,l,T,...G]}}let e="eq neq",L="gt gte le lte",f="and or not",C="not-eq xor is-array is-object is-equal",P="let each each-in if else unless",I="log debugger",p="has-block concat fn component helper modifier get hash query-params",U="action on",k="outlet yield",y="true false undefined null",a={$pattern:/\b[\w][\w-]+\b/,keyword:`${k} ${U} ${I}`,built_in:P,function:`${C} ${p} ${e} ${L} ${f}`,literal:y},d=n.either(n.concat(/[a-zA-Z_]/,n.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),i=/[A-Z][A-Za-z0-9]+/,B=n.either(i,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,n.concat(i,/::/,/-?/,i),/[a-z]/),A=/[a-z-][a-z\d-_]+\b/,w=/[@A-Za-z0-9._:-]+/,r={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},h={className:"punctuation",match:n.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},S={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:w}]},o={className:"operator",match:/\=/},l={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},b={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},g={className:{1:"class",2:"punctuation",3:"variable"},match:[/this/,/\./,/[^\s}]+/]},z={className:"name",match:/\b\w+\b/},R={className:"title",match:B},E={className:"title",match:A,keywords:a},H={className:"number",match:/[\d]+((\.[\d]+))?/},T={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},m={className:"string",variants:[{begin:/"/,end:/"/,contains:[r]},{begin:/'/,end:/'/,contains:[r]}]},s=[h,o,l,H,S,g,b,E,m],O={keywords:a,begin:n.concat(/\(/,n.lookahead(n.concat(/\)/))),end:/\)/,contains:[...s,"self",{begin:/\)/,endsParent:!0}]};s.push(O);let N=[{className:"mustache",keywords:a,begin:n.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},...s,O]}];m.variants.forEach(Z=>Z.contains.push(...N));let X=[{begin:n.concat(/\{\{#/,n.lookahead(A)),end:/\}\}/,contains:[h,...s,E,z]},{begin:n.concat(/\{\{\//,n.lookahead(n.concat(/\}\}/))),end:/\}\}/,contains:[o,E]}],G=[{className:"tag",begin:n.concat(/<:?/,n.lookahead(n.concat(d,n.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[o,l,T,S,g,...N,b,m,R]},{className:"tag",begin:n.concat(/<\/:?/,n.lookahead(n.concat(d,/>/))),end:/\>/,contains:[R]}];return c()}function $(t){return u("(?=",t,")")}function K(t){return u("(",t,")?")}function u(...t){return t.map(e=>M(e)).join("")}function j(...t){return"("+t.map(e=>M(e)).join("|")+")"}function M(t){return t?typeof t=="string"?t:t.source:null}var n={lookahead:$,either:j,optional:K,concat:u};hljs.registerLanguage("glimmer",_);})();
