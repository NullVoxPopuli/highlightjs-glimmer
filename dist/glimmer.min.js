(()=>{function N(t){function s(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:a,disableAutodetect:!0,contains:[t.COMMENT(/\{\{!--/,/--\}\}/),t.COMMENT(/\{\{!/,/\}\}/),t.COMMENT(/<!--/,/-->/),o,...E,i,r,b,...G]}}let e="eq neq",T="gt gte le lte",O="and or not",M="not-eq xor is-array is-object is-equal",L="let each each-in if else unless",f="log debugger",P="has-block concat fn component helper modifier get hash query-params",p="action on",I="outlet yield",C="true false undefined null",a={$pattern:/\b[\w][\w-]+\b/,keyword:`${I} ${p} ${f}`,built_in:L,function:`${M} ${P} ${e} ${T} ${O}`,literal:C},_=n.either(n.concat(/[a-zA-Z_]/,n.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),c=/[A-Z][A-Za-z0-9]+/,U=n.either(c,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,n.concat(c,/::/,/-?/,c),/[a-z]/),k=/[a-z-][a-z\d-_]+\b/,y=/[@A-Za-z0-9._:-]+/,o={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},w={className:"punctuation",match:n.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},d={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:y}]},i={className:"operator",match:/\=/},r={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},A={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},h={className:{1:"class",2:"punctuation",3:"variable"},match:[/this/,/\./,/[^\s}]+/]},K={className:"name",match:/\b\w+\b/},S={className:"title",match:U},z={className:"title",match:k,keywords:a},B={className:"number",match:/[\d]+((\.[\d]+))?/},b={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},l={className:"string",variants:[{begin:/"/,end:/"/,contains:[o]},{begin:/'/,end:/'/,contains:[o]}]},m=[w,i,r,B,d,h,A,z,l],R={keywords:a,begin:n.concat(/\(/,n.lookahead(n.concat(/\)/))),end:/\)/,contains:[...m,"self",{begin:/\)/,endsParent:!0}]};m.push(R);let E=[{className:"punctuation mustache",keywords:a,begin:n.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},...m,R]}];l.variants.forEach(H=>H.contains.push(...E));let G=[{className:"tag",begin:n.concat(/<:?/,n.lookahead(n.concat(_,n.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[i,r,b,d,h,...E,A,l,S]},{className:"tag",begin:n.concat(/<\/:?/,n.lookahead(n.concat(_,/>/))),end:/\>/,contains:[S]}];return s()}function Z(t){return u("(?=",t,")")}function $(t){return u("(",t,")?")}function u(...t){return t.map(e=>g(e)).join("")}function j(...t){return"("+t.map(e=>g(e)).join("|")+")"}function g(t){return t?typeof t=="string"?t:t.source:null}var n={lookahead:Z,either:j,optional:$,concat:u};hljs.registerLanguage("glimmer",N);})();
