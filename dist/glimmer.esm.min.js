function c(t){function s(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:a,disableAutodetect:!0,contains:[t.COMMENT(/\{\{!--/,/--\}\}/),t.COMMENT(/\{\{!/,/\}\}/),t.COMMENT(/<!--/,/-->/),r,..._,l,m,T,...G]}}let e="eq neq",L="gt gte le lte",f="and or not",p="not-eq xor is-array is-object is-equal",C="let each each-in if else unless",P="log debugger",I="has-block concat fn component helper modifier get hash query-params",U="action on",k="outlet yield",y="true false undefined null",a={$pattern:/\b[\w][\w-]+\b/,keyword:`${k} ${U} ${P}`,built_in:C,function:`${p} ${I} ${e} ${L} ${f}`,literal:y},d=n.either(n.concat(/[a-zA-Z_]/,n.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),i=/[A-Z][A-Za-z0-9]+/,B=n.either(i,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,n.concat(i,/::/,/-?/,i),/[a-z]/),A=/[a-z-][a-z\d-_]+\b/,w=/[@A-Za-z0-9._:-]+/,r={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},g={className:"punctuation",match:n.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},S={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:w}]},l={className:"operator",match:/=/},m={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},h={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},b={className:{1:"class",2:"punctuation",3:"variable"},match:[/this/,/\./,/\S+/]},z={className:"name",match:/\b\w+\b/},R={className:"title",match:B},E={className:"title",match:A,keywords:a},H={className:"number",match:/[\d]+((\.[\d]+))?/},T={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},N={className:"string",variants:[{begin:/"/,end:/"/,contains:[r]},{begin:/'/,end:/'/,contains:[r]}]},o=[g,l,m,H,S,b,h,E,N],O={keywords:a,begin:n.concat(/\(/,n.lookahead(n.concat(/\)/))),end:/\)/,contains:[...o,"self",{begin:/\)/,endsParent:!0}]};o.push(O);let _=[{className:"mustache",keywords:a,begin:n.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},...o,O]}];N.variants.forEach(Z=>Z.contains.push(..._));let X=[{begin:n.concat(/\{\{#/,n.lookahead(A)),end:/\}\}/,contains:[g,...o,E,z]},{begin:n.concat(/\{\{\//,n.lookahead(n.concat(/\}\}/))),end:/\}\}/,contains:[l,E]}],G=[{className:"tag",begin:n.concat(/<:?/,n.lookahead(n.concat(d,n.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[m,T,S,b,..._,h,N,R]},{className:"tag",begin:n.concat(/<\/:?/,n.lookahead(n.concat(d,/>/))),end:/\>/,contains:[R]}];return s()}function $(t){return u("(?=",t,")")}function K(t){return u("(",t,")?")}function u(...t){return t.map(e=>M(e)).join("")}function x(...t){return"("+t.map(e=>M(e)).join("|")+")"}function M(t){return t?typeof t=="string"?t:t.source:null}var n={lookahead:$,either:x,optional:K,concat:u};var D=c;function Y(t){t.registerLanguage("glimmer",c)}export{D as glimmer,Y as registerLanguage};
