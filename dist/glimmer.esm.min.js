function q(t){function o(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:e,contains:[t.COMMENT(/\{\{!--/,/--\}\}/),t.COMMENT(/\{\{!/,/\}\}/),t.COMMENT(/<!--/,/-->/),i,...N,r,E,T,...H]}}const a="eq neq",M="gt gte le lte",L="and or not",C="not-eq xor is-array is-object is-equal",P="let each each-in if else unless",I="log debugger",f="has-block concat fn component helper modifier get hash query-params",p="action on",U="outlet yield",k="true false undefined null",e={$pattern:/\b[\w][\w-]+\b/,keyword:`${U} ${p} ${I}`,built_in:P,function:`${C} ${f} ${a} ${M} ${L}`,literal:k},u=n.either(n.concat(/[a-zA-Z_]/,n.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),s=/[A-Z][A-Za-z0-9]+/,y=n.either(s,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,n.concat(s,/::/,/-?/,s),/[a-z]/),d=/[a-z-][a-z\d-_]+\b/,B=/[@A-Za-z0-9._:-]+/,i={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},A={className:"punctuation",match:n.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},S={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:B}]},r={className:"operator",match:/=/},E={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},h={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},b={className:{1:"class",2:"punctuation",3:"variable"},match:[/this/,/\./,/\S+/]},w={className:"name",match:/\b\w+\b/},R={className:"title",match:y},l={className:"title",match:d,keywords:e},z={className:"number",match:/[\d]+((\.[\d]+))?/},T={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},m={className:"string",variants:[{begin:/"/,end:/"/,contains:[i]},{begin:/'/,end:/'/,contains:[i]}]},c=[A,r,E,z,S,b,h,l,m],O={keywords:e,begin:n.concat(/\(/,n.lookahead(n.concat(/\)/))),end:/\)/,contains:[...c,"self",{begin:/\)/,endsParent:!0}]};c.push(O);const N=[{className:"mustache",keywords:e,begin:n.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},...c,O]}];m.variants.forEach(G=>G.contains.push(...N));const X=[{begin:n.concat(/\{\{#/,n.lookahead(d)),end:/\}\}/,contains:[A,...c,l,w]},{begin:n.concat(/\{\{\//,n.lookahead(n.concat(/\}\}/))),end:/\}\}/,contains:[r,l]}],H=[{className:"tag",begin:n.concat(/<:?/,n.lookahead(n.concat(u,n.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[E,T,S,b,...N,h,m,R]},{className:"tag",begin:n.concat(/<\/:?/,n.lookahead(n.concat(u,/>/))),end:/\>/,contains:[R]}];return o()}function Z(t){return _("(?=",t,")")}function $(t){return _("(",t,")?")}function _(...t){return t.map(a=>g(a)).join("")}function K(...t){return"("+t.map(a=>g(a)).join("|")+")"}function g(t){return t?typeof t=="string"?t:t.source:null}const n={lookahead:Z,either:K,optional:$,concat:_};export{q as glimmer};
