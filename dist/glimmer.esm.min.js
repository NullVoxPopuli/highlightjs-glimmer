function i(n){function e(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:o,disableAutodetect:!0,contains:[n.COMMENT(/\{\{!--/,/--\}\}/),n.COMMENT(/\{\{!/,/\}\}/),n.COMMENT(/<!--/,/-->/),l,...N,u,d,O,...x]}}let a="eq neq",S="gt gte le lte",r="and or not",m="not-eq xor is-array is-object is-equal",s="let each each-in if else unless",I="log debugger",P="has-block concat fn component helper modifier get hash query-params",U="action on",B="outlet yield",k="true false undefined null",o={$pattern:/\b[\w][\w-]+\b/,keyword:`${B} ${U} ${I}`,built_in:s,function:`${m} ${P} ${a} ${S} ${r}`,literal:k},b=t.either(t.concat(/[a-zA-Z_]/,t.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),E=/[A-Z][A-Za-z0-9]+/,w=t.either(E,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,t.concat(E,/::/,/-?/,E),/[a-z]/),T=/[a-z-][a-z\d-_]+\b/,H=/[@A-Za-z0-9._:-]+/,l={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},h={className:"punctuation",match:t.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},R={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:H}]},u={className:"operator",match:/=/},d={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},f={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},p={className:{1:"class",2:"punctuation",3:"variable"},match:[/this/,/\./,/\S+/]},y={className:"name",match:/\b\w+\b/},L={className:"title",match:w},_={className:"title",match:T,keywords:o},z={className:"number",match:/[\d]+((\.[\d]+))?/},O={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},g={className:"string",variants:[{begin:/"/,end:/"/,contains:[l]},{begin:/'/,end:/'/,contains:[l]}]},c=[h,u,d,z,R,p,f,_,g],M={keywords:o,begin:t.concat(/\(/,t.lookahead(t.concat(/\)/))),end:/\)/,contains:[...c,"self",{begin:/\)/,endsParent:!0}]};c.push(M);let N=[{className:"mustache",keywords:o,begin:t.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},...c,M]}];g.variants.forEach(G=>G.contains.push(...N));let q=[{begin:t.concat(/\{\{#/,t.lookahead(T)),end:/\}\}/,contains:[h,...c,_,y]},{begin:t.concat(/\{\{\//,t.lookahead(t.concat(/\}\}/))),end:/\}\}/,contains:[u,_]}],x=[{className:"tag",begin:t.concat(/<:?/,t.lookahead(t.concat(b,t.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[d,O,R,p,...N,f,g,L]},{className:"tag",begin:t.concat(/<\/:?/,t.lookahead(t.concat(b,/>/))),end:/\>/,contains:[L]}];return e()}function v(n){return A("(?=",n,")")}function Z(n){return A("(",n,")?")}function A(...n){return n.map(a=>C(a)).join("")}function $(...n){return"("+n.map(a=>C(a)).join("|")+")"}function C(n){return n?typeof n=="string"?n:n.source:null}var t={lookahead:v,either:$,optional:Z,concat:A};var F=i;function Q(n){K(n),j(n)}function K(n){n.registerLanguage("glimmer",i)}function j(n){X(n)}function X(n){let e=n.getLanguage("javascript");if(!e){console.warn("JavaScript grammar not loaded");return}e=e.rawDefinition(n);let a=e.contains.findIndex(s=>(s==null?void 0:s.begin)==="css`"),r=e.contains[a].starts.contains.find(s=>s.className==="subst"),m={begin:"hbs`",end:"",starts:{end:"`",returnEnd:!1,contains:[n.BACKSLASH_ESCAPE,r],subLanguage:"glimmer"}};e.contains.splice(a,0,m),n.registerLanguage("javascript",()=>e)}export{F as glimmer,j as registerInjections,K as registerLanguage,Q as setup};
