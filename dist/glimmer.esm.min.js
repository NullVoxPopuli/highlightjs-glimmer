function o(n){function e(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:i,disableAutodetect:!0,contains:[n.COMMENT(/\{\{!--/,/--\}\}/),n.COMMENT(/\{\{!/,/\}\}/),n.COMMENT(/<!--/,/-->/),u,...N,l,E,R,...H]}}let s="eq neq",r="gt gte le lte",c="and or not",a="not-eq xor is-array is-object is-equal",O="let each each-in if else unless",M="log debugger",I="has-block concat fn component helper modifier get hash query-params",P="action on",C="outlet yield",U="true false undefined null",i={$pattern:/\b[\w][\w-]+\b/,keyword:`${C} ${P} ${M}`,built_in:O,function:`${a} ${I} ${s} ${r} ${c}`,literal:U},A=t.either(t.concat(/[a-zA-Z_]/,t.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),m=/[A-Z][A-Za-z0-9]+/,x=t.either(m,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,t.concat(m,/::/,/-?/,m),/[a-z]/),y=/[a-z-][a-z\d-_]+\b/,k=/[@A-Za-z0-9._:-]+/,u={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},w={className:"punctuation",match:t.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},S={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:k}]},l={className:"operator",match:/\=/},E={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},b={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},p={className:{1:"class",2:"punctuation",3:"property"},match:[/this/,/\./,/[^\s}]+/]},f={className:"title",match:x},B={className:"title",match:y,keywords:i},z={className:"number",match:/[\d]+((\.[\d]+))?/},R={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},g={className:"string",variants:[{begin:/"/,end:/"/,contains:[u]},{begin:/'/,end:/'/,contains:[u]}]},_=[w,l,E,z,S,p,b,B,g],T={keywords:i,begin:t.concat(/\(/,t.lookahead(t.concat(/\)/))),end:/\)/,contains:[..._,"self",{begin:/\)/,endsParent:!0}]};_.push(T);let N=[{className:"punctuation mustache",keywords:i,begin:t.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},..._,T]}];g.variants.forEach(G=>G.contains.push(...N));let H=[{className:"tag",begin:t.concat(/<:?/,t.lookahead(t.concat(A,t.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[l,E,R,S,p,...N,b,g,f]},{className:"tag",begin:t.concat(/<\/:?/,t.lookahead(t.concat(A,/>/))),end:/\>/,contains:[f]}];return e()}function Z(n){return d("(?=",n,")")}function $(n){return d("(",n,")?")}function d(...n){return n.map(s=>h(s)).join("")}function v(...n){return"("+n.map(s=>h(s)).join("|")+")"}function h(n){return n?typeof n=="string"?n:n.source:null}var t={lookahead:Z,either:v,optional:$,concat:d};var D=o;function Y(n){K(n),L(n)}function J(n){let e=o(n);return L(n),e}function K(n){return n.registerLanguage("glimmer",o)}function L(n){X(n)}function X(n){let e=n.getLanguage("javascript");if(!e){console.warn("JavaScript grammar not loaded");return}e=e.rawDefinition(n);let s=e.contains.findIndex(a=>(a==null?void 0:a.begin)==="css`"),r=e.contains[s];e.contains.flatMap(a=>(a==null?void 0:a.contains)||a).filter(a=>a.subLanguage==="xml").forEach(a=>a.subLanguage="glimmer");let c=n.inherit(r,{begin:/hbs`/});c.starts.subLanguage="glimmer",e.contains.splice(s,0,c),n.registerLanguage("javascript",()=>e)}export{J as externalSetup,D as glimmer,L as registerInjections,K as registerLanguage,Y as setup};
