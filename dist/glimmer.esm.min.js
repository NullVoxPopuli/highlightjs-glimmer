function i(n){function a(){return{name:"Ember.JS, Glimmer",aliases:["glimmer","hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,keywords:c,disableAutodetect:!0,contains:[n.COMMENT(/\{\{!--/,/--\}\}/),n.COMMENT(/\{\{!/,/\}\}/),n.COMMENT(/<!--/,/-->/),l,...N,E,u,T,...z]}}let s="eq neq",r="gt gte le lte",o="and or not",e="not-eq xor is-array is-object is-equal",L="let each each-in if else unless",O="log debugger",M="has-block concat fn component helper modifier get hash query-params",I="action on",P="outlet yield",C="true false undefined null",c={$pattern:/\b[\w][\w-]+\b/,keyword:`${P} ${I} ${O}`,built_in:L,function:`${e} ${M} ${s} ${r} ${o}`,literal:C},A=t.either(t.concat(/[a-zA-Z_]/,t.optional(/[A-Z0-9:_.-]*:/),/[A-Z0-9_.-]*/),/[a-z]/),m=/[A-Z][A-Za-z0-9]+/,U=t.either(m,/[a-zA-Z0-9]*\.[a-zA-Z0-9-]*/,t.concat(m,/::/,/-?/,m),/[a-z]/),y=/[a-z-][a-z\d-_]+\b/,k=/[@A-Za-z0-9._:-]+/,l={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},w={className:"punctuation",match:t.either(/\./,/\{\{\{?#?\/?/,/\}\}\}?/,/\(/,/\)/,/::/,/\|/,/~/)},S={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{className:"template-variable",begin:k}]},E={className:"operator",match:/\=/},u={className:{1:"punctuation",2:"params"},match:[/@/,/[\w\d-_]+/]},b={className:{1:"attribute",2:"operator"},match:[/[A-Za-z0-9-_]+/,/=/]},p={className:{1:"class",2:"punctuation",3:"property"},match:[/this/,/\./,/[^\s}]+/]},R={className:"title",match:U},B={className:"title",match:y,keywords:c},x={className:"number",match:/[\d]+((\.[\d]+))?/},T={className:"comment",begin:/\{\{!--/,contains:[{className:"comment",match:/.+/},{begin:/--\}\}/,endsParent:!0}]},g={className:"string",variants:[{begin:/"/,end:/"/,contains:[l]},{begin:/'/,end:/'/,contains:[l]}]},_=[w,E,u,x,S,p,b,B,g],f={keywords:c,begin:t.concat(/\(/,t.lookahead(t.concat(/\)/))),end:/\)/,contains:[..._,"self",{begin:/\)/,endsParent:!0}]};_.push(f);let N=[{className:"punctuation mustache",keywords:c,begin:t.concat(/\{\{\{?#?/),end:/\}\}\}?/,contains:[{begin:/\}\}\}?/,endsParent:!0},..._,f]}];g.variants.forEach(H=>H.contains.push(...N));let z=[{className:"tag",begin:t.concat(/<:?/,t.lookahead(t.concat(A,t.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[E,u,T,S,p,...N,b,g,R]},{className:"tag",begin:t.concat(/<\/:?/,t.lookahead(t.concat(A,/>/))),end:/\>/,contains:[R]}];return a()}function G(n){return d("(?=",n,")")}function Z(n){return d("(",n,")?")}function d(...n){return n.map(s=>h(s)).join("")}function $(...n){return"("+n.map(s=>h(s)).join("|")+")"}function h(n){return n?typeof n=="string"?n:n.source:null}var t={lookahead:G,either:$,optional:Z,concat:d};var Y=i;function J(n){v(n),j(n)}function v(n){n.registerLanguage("glimmer",i)}function j(n){K(n)}function K(n){let a=n.getLanguage("javascript");if(!a){console.warn("JavaScript grammar not loaded");return}a=a.rawDefinition(n);let s=a.contains.findIndex(e=>(e==null?void 0:e.begin)==="css`"),r=a.contains[s];a.contains.flatMap(e=>(e==null?void 0:e.contains)||e).filter(e=>e.subLanguage==="xml").forEach(e=>e.subLanguage="glimmer");let o=n.inherit(r,{begin:/hbs`/});o.starts.subLanguage="glimmer",a.contains.splice(s,0,o),n.registerLanguage("javascript",()=>a)}export{Y as glimmer,j as registerInjections,v as registerLanguage,J as setup};
