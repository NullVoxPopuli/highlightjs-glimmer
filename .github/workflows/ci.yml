name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: "0 3 * * 0" # every Sunday at 3am

env:
  CI: true

jobs:
  lint_source:
    name: Lint Source
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - run: pnpm lint:js

  commits:
    name: Commit Messages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: volta-cli/action@v1
    - uses: wagoid/commitlint-github-action@v4.1.9


  esm_tests:
    name: ESM Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "14"
          - "16"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node}}
      - run: pnpm install

      - name: Test Modules with ${{ matrix.node }}
        run: pnpm test:modules

  cjs_tests:
    name: CJS Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "14"
          - "16"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node}}
      - run: pnpm install
      # Unified v10+ is not compatible with CJS
      - run: pnpm add --save-dev unified@^9.0.0
      - name: Test CJS with ${{ matrix.node }}
        run: pnpm test:cjs


  hljs_tests:
    name: "Highlight.js Tests"
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - run: scripts/hljs-test.sh

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [esm_tests, cjs_tests, hljs_tests]

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - name: Release
        run: pnpm semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
